{"version":3,"sources":["api/index.js","components/IndBookView.js","components/IndBookViewSB.js","components/IndSavedBook.js","components/SavedBooks.js","components/IndSearchBook.js","components/SearchRsltBooks.js","App.js","reportWebVitals.js","index.js"],"names":["apis","insertBook","payload","axios","post","getAllBooks","get","updateBookById","id","put","deleteBookById","delete","getBookById","IndBookView","props","commentsCntr","i","book","comments","length","push","className","onClick","_id","comment","src","thumbnail","alt","title","author","category","publishDate","description","defaultValue","savedGroup","onChange","isSaved","placeholder","IndBookViewSB","searchOn","searchBooks","handleSearchbar","IndSavedBook","SavedBooks","indBookCntr","currentBooks","currentSavedGroup","IndSearchBook","number","bookInfo","SearchRsltBooks","resultBooks","searchResult","App","state","previewOn","sidebarOn","searchView","savedBooks","indBookViewOn","cllctnBookInput","e","target","setState","searchInput","value","addCommentInput","handleSidebar","a","sidebarStatus","getFltrdBooks","group","books","filter","updatedList","Axios","then","data","items","catch","err","alert","object","volumeInfo","imageLinks","authors","publishedDate","categories","console","log","savedBooksView","setSavedBooksView","api","allbooks","emptySavedBooks","selectedBook","getAttribute","allBooks","finalBook","indbook","bookId","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27787e16.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const insertBook = payload => axios.post( `api/book`, payload );\r\nexport const getAllBooks = () => axios.get(`api/book`);\r\nexport const updateBookById = (id, payload) => axios.put(`api/book/${id}`, payload);\r\nexport const deleteBookById = id => axios.delete(`api/book/${id}`);\r\nexport const getBookById = id => axios.get(`api/book/${id}`);\r\n\r\nconst apis = {\r\n    insertBook,\r\n    getAllBooks,\r\n    updateBookById,\r\n    deleteBookById,\r\n    getBookById,\r\n}\r\n\r\nexport default apis;","import React from 'react';\r\n\r\nconst IndBookView = (props) => {\r\n    let commentsCntr = [];\r\n\r\n    // Function to show each individual comment \r\n    for (let i = 0; i < props.book.comments.length; i++ ) {\r\n        commentsCntr.push(  <div className='indComment' key={'Comment ' + i}>{props.book.comments[i]}<p className='removeCmmntBtn' onClick={props.onClick} book={props.book._id} comment={props.book.comments[i]}>X</p></div> );\r\n    }\r\n\r\n    // Function to show category of book if there is one available \r\n    const changeCategory = () => {\r\n        if (props.book.savedGroup) {\r\n            return props.book.savedGroup\r\n        }\r\n        else return 'General'\r\n    }\r\n\r\n    // Takes care of changing the functionality of the save button if the bookm is saved \r\n    const setChangeClass = () => {\r\n        if (props.isSaved) { return 'saved'}\r\n        else return ' ';\r\n    }\r\n    \r\n    return (\r\n        <div className='indBookView'>\r\n\r\n            <img className='thumbnail' src={props.book.thumbnail ? props.book.thumbnail.thumbnail : ''} alt='thumbnail'></img>\r\n\r\n            <p className='titleBook'>{props.book.title}</p>\r\n            <p className='authorBook'>{props.book.author}</p>\r\n        \r\n            <div className='dateGenreCntr'>\r\n                <p className='genreBook'>{props.book.category}</p>\r\n                <p className='publishDateBook'>{props.book.publishDate}</p>\r\n            </div>\r\n\r\n            <p className='descriptionBook'>{props.book.description}</p>\r\n\r\n            <div className='saveBookCntr'>\r\n                <select className='cllctnBook' defaultValue={changeCategory()} onChange={props.onChange}>\r\n                    <option>General</option>\r\n                    <option>Favorite</option>\r\n                    <option>To Read</option>\r\n                </select>\r\n \r\n                <div className={'saveBtn ' + setChangeClass()} id='saveBtn' onClick={props.onClick}>{props.isSaved ? 'Book Saved' : 'Save Book'}</div>\r\n            </div>\r\n\r\n            <div className='addCommentCntr'>\r\n                <input className='addComment' placeholder='Add Comment About Book...' onChange={props.onChange}/>\r\n\r\n                <div className='addBtn' book={props.book._id} onClick={props.onClick}>Add Comment</div>\r\n            </div>\r\n\r\n            <div className='commentsCntr'>\r\n                {commentsCntr}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndBookView;","import React from 'react';\r\nimport { BiSearchAlt } from 'react-icons/bi';\r\n\r\nconst IndBookViewSB = (props) => {\r\n    return (\r\n        <div>\r\n            { props.searchOn ? \r\n                <div className='searchbarCntr'>\r\n                    <input className='searchbar' placeholder='Search Book...' onChange={props.onChange}></input>\r\n                    <BiSearchAlt className='searchBtn' onChange={props.onChange} onClick={props.searchBooks}/>\r\n                </div>\r\n            : <BiSearchAlt className='searchBtnCls' onClick={props.handleSearchbar}/> } \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndBookViewSB;","import React from 'react';\r\n\r\nconst IndSavedBook = (props) => {\r\n    return (\r\n        <div className='indBookCntr' id='indBookSaved' book={props.book._id} onClick={props.onClick}>\r\n            <img className='thumbnailBook' src={props.book.thumbnail} alt='Thumbnail Book'></img>\r\n\r\n            <div className='mainInfoCntr'>\r\n                <p className='indBookTitle'>{props.book.title}</p>\r\n\r\n                <div className='authorGenreCntr'>\r\n                    <p className='indBookAuthor'>{props.book.author}</p>\r\n                    <p className='indBookGenre'>{props.book.category}</p>\r\n                    <p className='indBookCategory'>{props.book.savedGroup}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='removeBtn' book={props.book._id}>Remove</div>\r\n\r\n         \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndSavedBook;","import React from 'react';\r\nimport IndSavedBook from './IndSavedBook';\r\n\r\nconst SavedBooks = (props) => {\r\n    let indBookCntr = [];  \r\n\r\n    // Function to show every saved book that is passed as a prop\r\n    for (let i = 0; i < props.currentBooks.length; i++) {\r\n      indBookCntr.push( <IndSavedBook book={props.currentBooks[i]} onClick={props.onClick} key={'IndSearchBook ' + i}/> );\r\n    }\r\n\r\n    // Function to show the current saved group of a book if it has been saved \r\n    const showCrrntSavedGroup = () => props.currentSavedGroup === 'General' ? 'Saved Books: General' : props.currentSavedGroup === 'Favorite' ? 'Saved Books: Favorites' : props.currentSavedGroup === 'To Read' ? 'Saved Books: To Read' : 'Saved Books';\r\n\r\n    return (\r\n        <div className='savedBooksCntr'>\r\n        <p className='savedBooksHeading'>{showCrrntSavedGroup()}</p>\r\n\r\n        <div className='booksCntr'>\r\n            { indBookCntr }\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SavedBooks;","import React from 'react';\r\n\r\nconst IndSearchBook = (props) => {\r\n\r\n    // Function to only show the first three authors of a book\r\n    const authorsUpdt = () => {\r\n        if (props.bookInfo.author) {\r\n            if (props.bookInfo.author.length === 1) { return `${props.bookInfo.author[0]}`};\r\n            if (props.bookInfo.author.length === 2) { return `${props.bookInfo.author[0]},  ${props.bookInfo.author[1]}`};\r\n            if (props.bookInfo.author.length === 3) { return `${props.bookInfo.author[0]},  ${props.bookInfo.author[1]},  ${props.bookInfo.author[2]}`};\r\n        }\r\n        else { return 'No Author'}\r\n    }\r\n\r\n    const getThumbnail = () => {\r\n        if (props.bookInfo.thumbnail) { return props.bookInfo.thumbnail.thumbnail}\r\n        else return '';\r\n    }\r\n\r\n    return (\r\n        <div className='indBookCntr' id='indBookSearch'  book={props.number} onClick={props.onClick}>\r\n            <img className='thumbnailBook' src={getThumbnail()} alt='thumbail'></img>\r\n\r\n            <div className='mainInfoCntr'>\r\n                <p className='indBookTitle'>{props.bookInfo.title}</p>\r\n\r\n                <div className='authorGenreCntr'>\r\n                    <p className='indBookAuthor'>{authorsUpdt()}</p>\r\n                    <p className='indBookGenre'>{props.bookInfo.category ? props.bookInfo.category : 'No genre available'}</p>\r\n                </div>\r\n            \r\n            </div>\r\n\r\n         \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndSearchBook;","import React from 'react';\r\nimport IndSearchBook from './IndSearchBook';\r\n\r\nconst SearchRsltBooks = (props) => {\r\n  let indBookCntr = [];  \r\n\r\n  for (let i = 0; i < props.resultBooks.length; i++) {\r\n    indBookCntr.push( <IndSearchBook number={i} bookInfo={props.resultBooks[i]} onClick={props.onClick} key={'IndSearchBook ' + i}/> );\r\n  }\r\n  \r\n  return (\r\n    <div className='searchBooksCntr'>\r\n      <p className='searchRsltsHeading'>Results: {props.searchResult}</p>\r\n\r\n      <div className='booksCntr'>\r\n        { indBookCntr }\r\n      </div>\r\n          \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchRsltBooks;","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport api from './api';\nimport { AiOutlineMenu } from 'react-icons/ai'\nimport { AiOutlineClose } from 'react-icons/ai'\nimport { BiSearchAlt } from 'react-icons/bi'\nimport IndBookView from './components/IndBookView';\nimport IndBookViewSB from './components/IndBookViewSB';\nimport SavedBooks from './components/SavedBooks';\nimport SearchRsltBooks from './components/SearchRsltBooks';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      previewOn: true,\n      sidebarOn: false,\n      searchOn: false,\n      searchView: false,\n      savedBooks: false,\n      isSaved: false,\n      indBookViewOn: false,  \n      cllctnBookInput: 'General',    \n    }\n  }\n  \n  render () {\n    \n    const onChange = (e) => {\n      // Handles getting the values of the input elements and stores the value within their respective states \n      if (e.target.className === 'searchbar') { this.setState({ searchInput: e.target.value }); };\n      if (e.target.className === 'addComment') { this.setState({ addCommentInput: e.target.value }); };\n      if (e.target.className === 'cllctnBook') { this.setState({ cllctnBookInput: e.target.value }); };\n    }\n\n    const handleSidebar = async () => {\n      // Handles bringing the sidebar into view in both viewport changes \n      await this.setState({ sidebarOn: !this.state.sidebarOn })\n\n      if (this.state.sidebarOn === true ) {\n        this.setState({ sidebarStatus: 'active'});\n      }\n      else { this.setState({ sidebarStatus: '' } )};\n    }\n\n    const handleSearchbar = () => {\n      // Handles bringing the searchbar into view \n      this.setState({ searchOn: !this.state.searchOn });\n    }\n\n    const getFltrdBooks = async (group, books) => {\n      // Function to filter the saved books by the group being viewed\n      if (group === 'General' && books.length > 0) {\n        books = books.filter( book => book.savedGroup === \"General\");\n      }\n      \n      if (group === 'Favorite' && books.length > 0) {\n        books = books.filter( book => book.savedGroup === \"Favorite\");\n      }\n      \n      if (group === 'To Read' && books.length > 0) {\n        books = books.filter( book => book.savedGroup === \"To Read\");\n      }\n\n      this.setState({ currentBooks: books });\n    }\n\n    const searchBooks = async () => {\n      // Main function to search books from the API and individual objects with only the necessary information from each book \n      let items, updatedList = [];\n      await this.setState({ searchResult: this.state.searchInput});\n      await Axios.get(`https://www.googleapis.com/books/v1/volumes?q=${this.state.searchResult}`).then(data => items = data.data.items ).catch(err => alert(\"Invalid Search Input\"));\n      \n      for (let i = 0; i < items.length; i++) {\n        const object = { thumbnail: items[i].volumeInfo.imageLinks, title: items[i].volumeInfo.title, author: items[i].volumeInfo.authors, publishDate: items[i].volumeInfo.publishedDate, category: items[i].volumeInfo.categories, description: items[i].volumeInfo.description, comments: [], savedGroup: ''};\n\n        updatedList.push(object)\n      }\n      console.log(items)\n      console.log(updatedList);\n\n      this.setState({ currentBooks: updatedList });\n\n      if (this.state.indBookViewOn) {this.setState({ searchOn: !this.state.searchOn });}\n      this.setState({ previewOn: false });\n      this.setState({ indBookViewOn: false });\n      this.setState({ savedBooksView: false });\n      this.setState({ searchView: true });\n    }\n\n    const setSavedBooksView = () => {\n      // Function to bring the saved book view \n      this.setState({ previewOn: false });\n      this.setState({ indBookViewOn: false });\n      this.setState({ searchView: false });\n      this.setState({ savedBooksView: true });\n    };\n\n    const onClick = async (e) => {\n      // Main onClick function for application\n\n      if (e.target.className === 'category') {\n        // Main Function to change between different components or view within the application \n        this.setState({ sidebarStatus: '' });\n\n        // Code to search REST API for books and differenciate by with group is being viewed\n        if (e.target.id === 'searchBook') {\n          this.setState({ indBookViewOn: false });\n          this.setState({ savedBooksView: false });\n          this.setState({ previewOn: true });\n        }\n        if (e.target.id === 'savedBooks') {\n          let books;\n          await api.getAllBooks().then(allbooks => books = allbooks.data.data ).catch(err => alert('No Books Saved'), books = '' ) \n          await getFltrdBooks('', books);\n          this.setState({ currentBooks: books })\n          this.setState({ currentSavedGroup: '' });\n\n          setSavedBooksView();  \n        }\n        if (e.target.id === 'general') {\n          let books;\n          await api.getAllBooks().then(allbooks => books = allbooks.data.data ).catch(err => alert('No Books Saved'), books = '' )\n\n          await getFltrdBooks('General', books);\n          this.setState({ currentSavedGroup: 'General' });  \n          \n          setSavedBooksView();\n        }\n\n        if (e.target.id === 'favorite') {\n          let books;\n          await api.getAllBooks().then(allbooks => books = allbooks.data.data ).catch(err => alert('No Books Saved'), books = '' )\n\n          if (!this.state.emptySavedBooks) {await getFltrdBooks('Favorite', books);}\n          this.setState({ currentSavedGroup: 'Favorite' }); \n\n          setSavedBooksView();\n        }\n        if (e.target.id === 'toRead') {\n          let books;\n          await api.getAllBooks().then(allbooks => books = allbooks.data.data ).catch(err => alert('No Books Saved'), books = '' )\n\n          await getFltrdBooks('To Read', books);\n          this.setState({ currentSavedGroup: 'To Read' });  \n\n          setSavedBooksView();  \n        }\n      }\n\n      // Function to save book within database \n      if (e.target.id === 'saveBtn') {\n        const book = await this.state.selectedBook;\n        const thumbnail = () => book.thumbnail ? book.thumbnail.thumbnail : '';\n        book.savedGroup = this.state.cllctnBookInput;\n        book.thumbnail = thumbnail();\n        console.log(book)\n        await api.insertBook(book).then( book => alert('Book Saved!') ).catch( err => alert('Error Saving Book') );\n\n        this.setState({ isSaved: true });\n      }\n\n      // Function to remove a book from the database \n      if (e.target.className === 'removeBtn') {\n        const book = e.target.getAttribute('book');\n        await api.deleteBookById(book).then(book => alert('Book Removed'));\n\n        let books;\n        await api.getAllBooks().then(allbooks => books = allbooks.data.data )\n        await getFltrdBooks(this.state.currentSavedGroup, books);\n      }\n\n      // Function to bring up the saved books view \n      if (e.target.className === 'savedBkBtn') {\n        let books = [];\n        await api.getAllBooks().then(allbooks => books = allbooks.data.data ).catch(err => alert(\"No Books Saved\"), books = []);\n        this.setState({ currentBooks: books});\n        this.setState({ currentSavedGroup: '' });\n        setSavedBooksView();\n      }\n\n      // Function to view individual saved book \n      if (e.target.id === 'indBookSaved') {\n        let selectedBook;\n        await api.getBookById(e.target.getAttribute('book')).then(book => selectedBook = book.data.data)\n        selectedBook.thumbnail = {thumbnail: selectedBook.thumbnail};\n  \n        this.setState({ selectedBook: selectedBook});\n\n        this.setState({ isSaved: true });\n\n        this.setState({ previewOn: false });\n        this.setState({ savedBooksView: false });\n        this.setState({ searchView: false });\n        this.setState({ indBookViewOn: true });\n      }\n\n      // Function to view individual search book \n      if (e.target.id === 'indBookSearch') {\n        const book = this.state.currentBooks[e.target.getAttribute('book')];\n        \n        let books = [];\n        await api.getAllBooks().then(allBooks => books = allBooks.data.data).catch(err => console.log('No previous saved books'), books = [] )\n\n        // Shows the user if the book has already been saved or not \n        const finalBook = books.filter(indbook => indbook.author[0] === book.author[0] && indbook.title === book.title && indbook.publishDate === book.publishDate);\n\n        if (finalBook[0]) { \n          this.setState({ isSaved: true });\n          this.setState({ cllctnBookInput: finalBook[0].savedGroup });\n          book.savedGroup = finalBook[0].savedGroup;\n          book._id = finalBook[0]._id;\n          book.comments = finalBook[0].comments;\n        }\n        else {\n          this.setState({ isSaved: false });\n          this.setState({ cllctnBookInput: 'General'});\n        }\n\n        this.setState({ selectedBook: book });\n\n        this.setState({ previewOn: false });\n        this.setState({ savedBooksView: false });\n        this.setState({ searchView: false });\n        this.setState({ indBookViewOn: true });\n      }\n\n      // Function to add new comment to book \n      if (e.target.className === 'addBtn') {\n        const book = this.state.selectedBook;\n\n        if (this.state.isSaved) {\n          const bookId = e.target.getAttribute('book')\n\n          book.comments.push(this.state.addCommentInput);\n          this.setState({ selectedBook: book })\n\n          await api.updateBookById(bookId, book).then(book => console.log('book updated'))\n        } \n        else {\n          book.savedGroup = 'General';\n          book.comments.push(this.state.addCommentInput);\n          book.thumbnail = book.thumbnail.thumbnail;\n          await api.insertBook(book).then( book => alert('Book Saved!') );\n          this.setState({ isSaved: true });\n        }\n      }\n\n      // Function to remove comment from book \n      if (e.target.className === 'removeCmmntBtn') {\n        const book = this.state.selectedBook, bookId = e.target.getAttribute('book');\n\n        book.comments = book.comments.filter( comment => comment !== e.target.getAttribute('comment') )\n\n        await api.updateBookById(bookId, book).then(book => console.log('book updated'))\n        this.setState({ selectedBook: book })\n      }\n\n    } \n\n    return (\n      <div className=\"container\">\n\n        <div className='nav-barCntr'>\n          <AiOutlineMenu className='sidebarBtn' onClick={handleSidebar}/>\n          \n          { this.state.indBookViewOn ? <IndBookViewSB onClick={onClick} onChange={onChange} searchOn={this.state.searchOn} handleSearchbar={handleSearchbar} searchBooks={searchBooks}/> : null}\n\n         { this.state.searchView || this.state.savedBooksView ? \n            <div className='searchbarCntr'>\n              <input className='searchbar' placeholder={ this.state.searchView ? \"Search Book...\" : this.state.savedBooksView ? 'Search Saved Book...' : null} onChange={onChange}></input>\n              <BiSearchAlt className='searchBtn' onClick={searchBooks}/>\n            </div>\n          : null }\n\n          { this.state.previewOn ? \n            <div className='searchbarCntr'>\n              <input className='searchbar' placeholder=\"Search Book...\" onChange={onChange}></input>\n              <BiSearchAlt className='searchBtn' onClick={searchBooks}/>\n            </div>\n          : null }\n       \n\n        </div>\n\n        <div className={'sidebar ' + this.state.sidebarStatus }>\n          <AiOutlineClose className='sidebarBtnOpen' onClick={handleSidebar}/>\n\n          <div className='categoriesCntr'>\n            <p className='category' id='searchBook' onClick={onClick}>Search Book</p>\n            <p className='category' id='savedBooks' onClick={onClick}>Saved Books</p>\n            <p className='category' id='general' onClick={onClick}>General</p>\n            <p className='category' id='favorite' onClick={onClick}>Favorites</p>\n            <p className='category' id='toRead' onClick={onClick}>To Read</p>\n          </div>\n        </div>\n        \n        { this.state.previewOn ? <p className='previewMsg'>Search book or view <span className='savedBkBtn' onClick={onClick}>Saved Books</span></p> : null }\n        { this.state.searchView ? <SearchRsltBooks searchResult={this.state.searchResult} resultBooks={this.state.currentBooks} onClick={onClick} /> : null }\n        { this.state.savedBooksView ?  <SavedBooks currentSavedGroup={this.state.currentSavedGroup} currentBooks={this.state.currentBooks} onClick={onClick}/> : null }\n        { this.state.indBookViewOn ? <IndBookView isSaved={this.state.isSaved} book={this.state.selectedBook} onClick={onClick} onChange={onChange}/> : null }\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}